"""empty message

Revision ID: 04f0cb52bc03
Revises: 
Create Date: 2024-12-28 10:42:31.002375

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '04f0cb52bc03'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('control_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('control_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('email_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pathology',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pathology_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pathology_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=300), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('sx_dx_hand', sa.String(length=10), nullable=True),
    sa.Column('doctor_ids', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('doctor_current_pathology',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_doctor', sa.Integer(), nullable=False),
    sa.Column('id_patient', sa.Integer(), nullable=False),
    sa.Column('id_pathology', sa.Integer(), nullable=True),
    sa.Column('id_pathology_row', sa.Integer(), nullable=True),
    sa.Column('id_pathology_type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_doctor'], ['user.id'], ),
    sa.ForeignKeyConstraint(['id_patient'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_doctor', 'id_patient', 'id_pathology', 'id_pathology_type')
    )
    op.create_table('doctor_patient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_doctor', sa.Integer(), nullable=False),
    sa.Column('id_patient', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_doctor'], ['user.id'], ),
    sa.ForeignKeyConstraint(['id_patient'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_doctor', 'id_patient')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_doctor', sa.Integer(), nullable=False),
    sa.Column('id_patient', sa.Integer(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_doctor'], ['user.id'], ),
    sa.ForeignKeyConstraint(['id_patient'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pathology_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_doctor', sa.Integer(), nullable=False),
    sa.Column('id_patient', sa.Integer(), nullable=False),
    sa.Column('id_pathology', sa.Integer(), nullable=False),
    sa.Column('id_pathology_type', sa.Integer(), nullable=False),
    sa.Column('id_pathology_status', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id_created_from', sa.Integer(), nullable=True),
    sa.Column('surgery_date', sa.DateTime(), nullable=True),
    sa.Column('next_control_date', sa.DateTime(), nullable=False),
    sa.Column('next_control_time', sa.String(length=10), nullable=False),
    sa.Column('next_control_number', sa.Integer(), nullable=False),
    sa.Column('is_date_accepted', sa.Integer(), nullable=True),
    sa.Column('email_status', sa.Integer(), nullable=True),
    sa.Column('email_sent_date', sa.DateTime(), nullable=True),
    sa.Column('email_confirmed_date', sa.DateTime(), nullable=True),
    sa.Column('id_control_status', sa.Integer(), nullable=False),
    sa.Column('mpcj', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('pipj', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('dipj', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ipj', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('polso', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('vas', sa.Float(), nullable=True),
    sa.Column('trapezio_metacarpale', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('forza', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('dash', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('prwhe', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('eaton_littler', sa.Integer(), nullable=True),
    sa.Column('edema', sa.String(length=10), nullable=True),
    sa.Column('sensibilita_volare', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('sensibilita_dorsale', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('cicatrice', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tutore', sa.String(length=10), nullable=True),
    sa.Column('altro', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('guarigione_ossea', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('concesso_inizio_mobilizzazione', sa.Integer(), nullable=True),
    sa.Column('articolazione_stabile', sa.Integer(), nullable=True),
    sa.Column('data_inizio_mobilizzazione', sa.DateTime(), nullable=True),
    sa.Column('note', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('pre_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('chirugico_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('post_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id_control_status'], ['control_status.id'], ),
    sa.ForeignKeyConstraint(['id_doctor'], ['user.id'], ),
    sa.ForeignKeyConstraint(['id_pathology'], ['pathology.id'], ),
    sa.ForeignKeyConstraint(['id_pathology_status'], ['pathology_status.id'], ),
    sa.ForeignKeyConstraint(['id_pathology_type'], ['pathology_type.id'], ),
    sa.ForeignKeyConstraint(['id_patient'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pathology_data')
    op.drop_table('notification')
    op.drop_table('doctor_patient')
    op.drop_table('doctor_current_pathology')
    op.drop_table('user')
    op.drop_table('pathology_type')
    op.drop_table('pathology_status')
    op.drop_table('pathology')
    op.drop_table('notification_status')
    op.drop_table('email_status')
    op.drop_table('control_status')
    # ### end Alembic commands ###
